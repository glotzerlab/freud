[build-system]
requires = ["numpy>=2.0.0", "scikit-build-core", "nanobind>=2.0.0"]
build-backend = "scikit_build_core.build"

[project]
name = "freud-analysis"
version = "3.5.0"
requires-python = ">=3.12"
description = "Powerful, efficient trajectory analysis in scientific Python."
readme = "README.rst"
license = "BSD-3-Clause"
license-files = [ "LICENSE" ]
authors = [
    { name = "The Glotzer Lab" }
]
maintainers = [
    { name = "freud Developers" }
]
classifiers=[
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Chemistry",
    "Topic :: Scientific/Engineering :: Physics",
    "Programming Language :: C++",
    "Programming Language :: Cython",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
dependencies = ["numpy>=1.19", "rowan>=1.2.1", "scipy>=1.1", "parsnip-cif>=0.2.0"]
keywords = ["simulation", "analysis", "molecular dynamics", "soft matter",
            "particle", "system", "computational", "physics"]

[project.urls]
Documentation = "https://freud.readthedocs.io"
Download = "https://pypi.org/project/freud-analysis/"
Source = "https://github.com/glotzerlab/freud"
Issues = "https://github.com/glotzerlab/freud/issues"

[tool.scikit-build]
sdist.exclude = [".github", "doc"]
wheel.py-api = "cp312"

[tool.cibuildwheel]
archs = ["auto64"]
skip = ["pp*","*musllinux*","cp3??t-*"]
test-requires = ["pytest==8.4.2", "numpy==2.3.3", "scipy==1.16.2", "gsd==4.2.0", "matplotlib==3.10.6", "sympy==1.14"]
test-command = "pytest {package}/tests -v --log-level=DEBUG"

# Use abi3audit to catch issues with Limited API wheels
[tool.cibuildwheel.linux]
repair-wheel-command = [
  "auditwheel repair -w {dest_dir} {wheel}",
  "pipx run abi3audit --strict --verbose {wheel}",
]

[tool.cibuildwheel.macos]
repair-wheel-command = [
  "delocate-wheel --require-archs {delocate_archs} -w {dest_dir} -v {wheel}",
  "pipx run abi3audit --strict --verbose {wheel}",
]
[tool.cibuildwheel.windows]
repair-wheel-command = [
  "copy {wheel} {dest_dir}",
  "pipx run abi3audit --strict --verbose {wheel}",
]
